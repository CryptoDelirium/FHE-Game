/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Game, GameInterface } from "../../contracts/Game";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encrypted_moves",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPlayed1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPlayed2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "input",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "playGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "input",
        type: "bool",
      },
    ],
    name: "selectSinglePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b503361018b6100af604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c288121790556001600160a01b0381166101fd57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6102068161020c565b5061025b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a0f806102685f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c8063c331d56c11610072578063e17bc50c11610058578063e17bc50c1461016f578063f2fde38b14610182578063f71d96cb14610195575f5ffd5b8063c331d56c14610146578063d4f77b1c14610167575f5ffd5b80633989cd8e116100a25780633989cd8e14610106578063715018a6146101185780638da5cb5b14610122575f5ffd5b8063052e89f8146100bd5780631103ff35146100e5575b5f5ffd5b6003546100d09062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100f86100f336600461088a565b6101a8565b6040519081526020016100dc565b6003546100d090610100900460ff1681565b6101206101be565b005b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100dc565b6101206101543660046108a1565b6003805460ff1916911515919091179055565b6101206101d1565b61012061017d3660046108c0565b6102e7565b610120610190366004610937565b610503565b61012e6101a336600461088a565b610540565b600481600281106101b7575f80fd5b0154905081565b6101c661055f565b6101cf5f61058b565b565b60035460ff161561025f576001546001600160a01b0316156102275760405162461bcd60e51b815260206004820152600a602482015269131bd8989e48119d5b1b60b21b60448201526064015b60405180910390fd5b600180546001600160a01b03191633908117825590805b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316158061028057506002546001600160a01b0316155b6102b95760405162461bcd60e51b815260206004820152600a602482015269131bd8989e48119d5b1b60b21b604482015260640161021e565b6001546001600160a01b0316156102d3573360018061023e565b600180546001600160a01b03191633179055565b60035460ff16156103ee5760015f01546001600160a01b0316331461033f5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210283630bcb2b960911b604482015260640161021e565b5f61037f8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506105da92505050565b6003805462ffff0019166201010017905590508060045f01556103a260046105ee565b6005556103b360045f5b0154610603565b506103cd60045f5b01545f546001600160a01b0316610612565b506103da600460016103ac565b506103e7600460016103bb565b5050505050565b60015f01546001600160a01b0316331480610415575060018001546001600160a01b031633145b6104525760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210283630bcb2b960911b604482015260640161021e565b5f6104928484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506105da92505050565b6001549091506001600160a01b031633036104d9576003805461ff0019166101001790558060045f01556104c760045f6103ac565b506104d360045f6103bb565b506104fd565b6003805462ff0000191662010000179055806004600101556103da600460016103ac565b50505050565b61050b61055f565b6001600160a01b03811661053457604051631e4fbdf760e01b81525f600482015260240161021e565b61053d8161058b565b50565b6001816002811061054f575f80fd5b01546001600160a01b0316905081565b5f546001600160a01b031633146101cf5760405163118cdaa760e01b815233600482015260240161021e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6105e783836002610624565b9392505050565b5f6105fd8260ff166002610744565b92915050565b5f61060e8230610801565b5090565b5f61061d8383610801565b5090919050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b9061069d90889033908990899060040161097d565b6020604051808303815f875af11580156106b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dd91906109d7565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610726575f5ffd5b505af1158015610738573d5f5f3e3d5ffd5b50505050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516324777a3f60e11b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03909116906348eef47e906107b990879087906004016109ee565b6020604051808303815f875af11580156107d5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f991906109d7565b949350505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561086f575f5ffd5b505af1158015610881573d5f5f3e3d5ffd5b50505050505050565b5f6020828403121561089a575f5ffd5b5035919050565b5f602082840312156108b1575f5ffd5b813580151581146105e7575f5ffd5b5f5f5f604084860312156108d2575f5ffd5b83359250602084013567ffffffffffffffff8111156108ef575f5ffd5b8401601f810186136108ff575f5ffd5b803567ffffffffffffffff811115610915575f5ffd5b866020828401011115610926575f5ffd5b939660209190910195509293505050565b5f60208284031215610947575f5ffd5b81356001600160a01b03811681146105e7575f5ffd5b6054811061097957634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f8301168401019150506109ce606083018461095d565b95945050505050565b5f602082840312156109e7575f5ffd5b5051919050565b828152604081016105e7602083018461095d56fea164736f6c634300081c000a";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Game & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Game__factory {
    return super.connect(runner) as Game__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new Interface(_abi) as GameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Game {
    return new Contract(address, _abi, runner) as unknown as Game;
  }
}

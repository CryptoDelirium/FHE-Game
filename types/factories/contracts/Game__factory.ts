/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Game, GameInterface } from "../../contracts/Game";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decryptPlayer1",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decryptPlayer2",
        type: "uint8",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "callbackDecryptMultipleValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encrypted_moves",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPlayed1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPlayed2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "input",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "playGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestDecryptPlayerMoves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "input",
        type: "bool",
      },
    ],
    name: "selectMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf696020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273901f8942346f7ab3a01f6d7613119bca447bb030606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c28812179055611606806101dc5f395ff3fe608060405234801561000f575f5ffd5b50600436106100c4575f3560e01c80633ca627d61161007d578063d4f77b1c11610058578063d4f77b1c1461018e578063e17bc50c14610196578063f71d96cb146101a9575f5ffd5b80633ca627d61461014e57806365372147146101615780636cbc2ded14610186575f5ffd5b80631103ff35116100ad5780631103ff35146100fa5780631ffcc33a1461011b5780633989cd8e1461013c575f5ffd5b8063052e89f8146100c857806306e89edc146100f0575b5f5ffd5b6002546100db9062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100f86101d4565b005b61010d6101083660046110f7565b610259565b6040519081526020016100e7565b6100f861012936600461111b565b6002805460ff1916911515919091179055565b6002546100db90610100900460ff1681565b6100f861015c366004611190565b61026f565b6006546101749062010000900460ff1681565b60405160ff90911681526020016100e7565b61017461029c565b6100f8610505565b6100f86101a43660046112e2565b610639565b6101bc6101b73660046110f7565b610869565b6040516001600160a01b0390911681526020016100e7565b6040805160028082526060820183525f92602083019080368337505060035491925050815f8151811061020957610209611359565b60209081029190910101526004548160018151811061022a5761022a611359565b60209081029190910101526006805461ff00191661010017905561025581631e5313eb60e11b610887565b5050565b60038160028110610268575f80fd5b0154905081565b610279848261089a565b506005805460ff9283166101000261ffff19909116939092169290921717905550565b6002545f90610100900460ff1680156102bd575060025462010000900460ff165b61030e5760405162461bcd60e51b815260206004820152601160248201527f57616974696e67206f6e20706c6179657200000000000000000000000000000060448201526064015b60405180910390fd5b600654610100900460ff166103655760405162461bcd60e51b815260206004820152601160248201527f4e6f7420796574206465637279707465640000000000000000000000000000006044820152606401610305565b6103956040518060600160405280603b81526020016115bf603b913960055460ff80821691610100900416610901565b60055460ff610100820481169116036103b9576006805462ff0000191690556104f5565b60055460ff161580156103d7575060055460ff610100909104166001145b156103ee576006805462ff00001916620200001790555b60055460ff1615801561040b5750600554610100900460ff166002145b15610422576006805462ff00001916620100001790555b60055460ff16600114801561043f5750600554610100900460ff16155b15610456576006805462ff00001916620100001790555b60055460ff1660011480156104755750600554610100900460ff166002145b1561048c576006805462ff00001916620200001790555b60055460ff1660021480156104a95750600554610100900460ff16155b156104c0576006805462ff00001916620100001790555b60055460ff161580156104de575060055460ff610100909104166001145b156104f5576006805462ff00001916620200001790555b5060065462010000900460ff1690565b60025460ff16156105a7575f546001600160a01b0316156105555760405162461bcd60e51b815260206004820152600a602482015269131bd8989e48119d5b1b60b21b6044820152606401610305565b5f805473ffffffffffffffffffffffffffffffffffffffff19163390811782559060015b01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f546001600160a01b031615806105c757506001546001600160a01b0316155b6106005760405162461bcd60e51b815260206004820152600a602482015269131bd8989e48119d5b1b60b21b6044820152606401610305565b5f546001600160a01b03161561061957335f6001610579565b5f805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60025460ff1615610718575f8001546001600160a01b031633146106905760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210283630bcb2b960911b6044820152606401610305565b5f6106d08484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061095d92505050565b6002805462ffff0019166201010017905590508060035f01556106f36004610970565b60045561070460035f5b015461097f565b50610711600360016106fd565b5050505050565b5f8001546001600160a01b031633148061073e57505f600101546001600160a01b031633145b61077b5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210283630bcb2b960911b6044820152606401610305565b5f6107bb8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061095d92505050565b5f549091506001600160a01b03163303610824576002805461ff0019166101001790558060035f01556107ef60035f6106fd565b5061081360035f5b015473f39fd6e51aad88f6f4ce6ab8827279cfffb9226661098e565b506006805461ff0019169055610862565b6002805462ff000019166201000017905580600360010155610848600360016106fd565b50610855600360016107f7565b506006805461ff00191690555b505b505050565b5f8160028110610877575f80fd5b01546001600160a01b0316905081565b5f61089383835f6109a0565b9392505050565b5f6108a483610aec565b90505f6108b18284610bbd565b9050806108d15760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b6108648383836040516024016109199392919061139b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663ca47c4eb60e01b179052610cd8565b5f61089383836002610ce4565b92915050565b5f61096a8260ff166002610e04565b5f61098a8230610ec1565b5090565b5f6109998383610ec1565b5090919050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01547fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd224690610a339089906004016113f9565b5f604051808303815f87803b158015610a4a575f5ffd5b505af1158015610a5c573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b91508690610a959087908b908b9060040161140b565b5f604051808303818588803b158015610aac575f5ffd5b505af1158015610abe573d5f5f3e3d5ffd5b5050505050610acd8387610f4a565b600182018054905f610ade83611450565b919050555050509392505050565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d00919003610b5d5760405163d66ca67560e01b815260040160405180910390fd5b5f83815260028201602090815260409182902080548351818402810184019094528084529091830182828015610bb057602002820191905f5260205f20905b815481526020019060010190808311610b9c575b5050505050915050919050565b5f602481610bca85610fd7565b90505f8167ffffffffffffffff811115610be657610be661114b565b6040519080825280601f01601f191660200182016040528015610c10576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063b009ec4c90610c8d908a9086908b90600401611468565b6020604051808303815f875af1158015610ca9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ccd91906114f2565b979650505050505050565b610ce181611084565b50565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b90610d5d908890339089908990600401611541565b6020604051808303815f875af1158015610d79573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9d9190611580565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610de6575f5ffd5b505af1158015610df8573d5f5f3e3d5ffd5b50505050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516324777a3f60e11b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03909116906348eef47e90610e799087908790600401611597565b6020604051808303815f875af1158015610e95573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb99190611580565b949350505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610f2f575f5ffd5b505af1158015610f41573d5f5f3e3d5ffd5b50505050505050565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009015610fb757604051633f06d22b60e01b815260040160405180910390fd5b5f83815260028201602090815260409091208351610862928501906110a3565b80515f9081805b82811015611078575f858281518110610ff957610ff9611359565b6020026020010151601e6020811061101357611013611359565b1a60538111156110255761102561150d565b9050600981605381111561103b5761103b61150d565b60ff1610156110565761104f6020846115ab565b925061106f565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101610fde565b50610eb96020826115ab565b5f6a636f6e736f6c652e6c6f6790505f5f835160208501845afa505050565b828054828255905f5260205f209081019282156110dc579160200282015b828111156110dc5782518255916020019190600101906110c1565b5061098a9291505b8082111561098a575f81556001016110e4565b5f60208284031215611107575f5ffd5b5035919050565b8015158114610ce1575f5ffd5b5f6020828403121561112b575f5ffd5b81356108938161110e565b803560ff81168114611146575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111885761118861114b565b604052919050565b5f5f5f5f608085870312156111a3575f5ffd5b843593506111b360208601611136565b92506111c160408601611136565b9150606085013567ffffffffffffffff8111156111dc575f5ffd5b8501601f810187136111ec575f5ffd5b803567ffffffffffffffff8111156112065761120661114b565b8060051b6112166020820161115f565b9182526020818401810192908101908a841115611231575f5ffd5b6020850192505b838310156112d357823567ffffffffffffffff811115611256575f5ffd5b8501603f81018c13611266575f5ffd5b602081013567ffffffffffffffff8111156112835761128361114b565b611296601f8201601f191660200161115f565b8181526040838301018e10156112aa575f5ffd5b816040840160208301375f60208383010152808552505050602082019150602083019250611238565b979a9699509497505050505050565b5f5f5f604084860312156112f4575f5ffd5b83359250602084013567ffffffffffffffff811115611311575f5ffd5b8401601f81018613611321575f5ffd5b803567ffffffffffffffff811115611337575f5ffd5b866020828401011115611348575f5ffd5b939660209190910195509293505050565b634e487b7160e01b5f52603260045260245ffd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b606081525f6113ad606083018661136d565b60208301949094525060400152919050565b5f8151808452602084019350602083015f5b828110156113ef5781518652602095860195909101906001016113d1565b5093949350505050565b602081525f61089360208301846113bf565b838152606060208201525f61142360608301856113bf565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016114615761146161143c565b5060010190565b606081525f61147a60608301866113bf565b828103602084015261148c818661136d565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b838110156114e357601f198684030185526114cd83835161136d565b60209586019590935091909101906001016114b1565b50909998505050505050505050565b5f60208284031215611502575f5ffd5b81516108938161110e565b634e487b7160e01b5f52602160045260245ffd5b6054811061153d57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611568608083018561136d565b90506115776060830184611521565b95945050505050565b5f60208284031215611590575f5ffd5b5051919050565b828152604081016108936020830184611521565b8082018082111561096a5761096a61143c56fe546865206d6f766573206172653a20256920616e642025692e0a2030202d20526f636b2c20312d2050617065722c2032202d2053636973736f7273a164736f6c634300081c000a";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Game & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Game__factory {
    return super.connect(runner) as Game__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new Interface(_abi) as GameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Game {
    return new Contract(address, _abi, runner) as unknown as Game;
  }
}
